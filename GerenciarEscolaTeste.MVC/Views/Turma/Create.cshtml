@model GerenciarEscolaTeste.Application.ViewModels.TurmaViewModel

@{
    var hasError = ViewData.ModelState[string.Empty] != null && ViewData.ModelState[string.Empty].Errors.Any();
    ViewBag.Title = "Create";
}
@Html.Hidden("ValidationMessage", @Html.ValidationMessage(string.Empty).ToString())
@Html.Hidden("HasError", hasError)

<h2>:: Cadastro: Turma ::</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumTurma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumTurma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumTurma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Periodo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Periodo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Periodo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataTurma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataTurma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataTurma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PessoaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PessoaId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <!-- INICIO Barra de Acoes -->
    <div class="form-group mBottomZero">
        <hr class="divisaoBtnBottom">
        <div class="row rowButtom">
            <div class="col-md-12">
                <div class="btn-toolbar pull-right">
                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default btn-sm" })
                    <input type="submit" value="Salvar" class="btn btn-primary btn-sm SalvarTurma" />
                </div>
            </div>
        </div>
    </div>
    <!-- FIM Barra de Acoes -->
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
